#cloud-config
password: xKdqOAX4AiZ4g0Zcm7kH
chpasswd: { expire: False }

package_update: true
package_upgrade: true
package_reboot_if_required: true
packages:
  - apt-transport-https
  - conntrack
  - curl
  - ipset
  - iputils-ping
  - less
  - socat
  - vim
{%- if ldap_uri %}
  - libnss-ldap
{% endif %}

# Until SSH-based keys are configured in LDAP,
# password authentication is needed.
ssh_pwauth: yes

runcmd:
  - touch /etc/cloud/cloud-init.disabled

ssh_authorized_keys:
{%- for key in ssh_keys %}
  - "{{ key }}"
{%- endfor %}

hostname: {{ hostname }}
fqdn: {{ fqdn }}
manage_etc_hosts: True
final_message: "The system is up after $UPTIME seconds"

users:
  - default
  - name: cloudy
    gecos: Cloud NonRoot Role User
    uid: "9001"

write_files:
  - path: /etc/modules-load.d/kubernetes_modules.conf
    content: |
      # Automatically load these modules needed by Kubernetes at system startup
      br_netfilter
      overlay
      vxlan
    permissions: '0644'
{% if ldap_uri %}
  - path: /etc/ldap.conf
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/ldap.conf
      # installed as part of machine creation.
      base {{ ldap_basedn }}
      uri {{ ldap_uri }}/
      ldap_version 3
      pam_password md5
  - path: /etc/nsswitch.conf
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/nsswitch.conf
      passwd: files ldap
      group: files ldap
      shadow: files ldap
      gshadow:        files
      hosts:          files dns
      networks:       files
      protocols:      db files
      services:       db files
      ethers:         db files
      rpc:            db files
      netgroup: nis
  - path: /etc/pam.d/common-account
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/pam.d/common-account - authorization settings common to all services
      # here are the per-package modules (the "Primary" block)
      account	[success=2 new_authtok_reqd=done default=ignore]	pam_unix.so
      account	[success=1 default=ignore]	pam_ldap.so
      # here's the fallback if no module succeeds
      account	requisite			pam_deny.so
      # prime the stack with a positive return value if there isn't one already;
      # this avoids us returning an error just because nothing sets a success code
      # since the modules above will each just jump around
      account	required			pam_permit.so
      # and here are more per-package modules (the "Additional" block)
      # end of pam-auth-update config
  - path: /etc/pam.d/common-auth
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/pam.d/common-auth - authentication settings common to all services
      # here are the per-package modules (the "Primary" block)
      auth	[success=2 default=ignore]	pam_unix.so nullok_secure
      auth	[success=1 default=ignore]	pam_ldap.so use_first_pass
      # here's the fallback if no module succeeds
      auth	requisite			pam_deny.so
      # prime the stack with a positive return value if there isn't one already;
      # this avoids us returning an error just because nothing sets a success code
      # since the modules above will each just jump around
      auth	required			pam_permit.so
      # and here are more per-package modules (the "Additional" block)
      auth	optional			pam_cap.so
      # end of pam-auth-update config
  - path: /etc/pam.d/common-password
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/pam.d/common-password - password-related modules common to all services
      # here are the per-package modules (the "Primary" block)
      password	[success=2 default=ignore]	pam_unix.so obscure sha512
      password	[success=1 user_unknown=ignore default=die]	pam_ldap.so use_authtok try_first_pass
      # here's the fallback if no module succeeds
      password	requisite			pam_deny.so
      # prime the stack with a positive return value if there isn't one already;
      # this avoids us returning an error just because nothing sets a success code
      # since the modules above will each just jump around
      password	required			pam_permit.so
      # and here are more per-package modules (the "Additional" block)
      # end of pam-auth-update config
  - path: /etc/pam.d/common-session
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/pam.d/common-session - session-related modules common to all services
      # here are the per-package modules (the "Primary" block)
      session	[default=1]	pam_permit.so
      # here's the fallback if no module succeeds
      session	requisite	pam_deny.so
      # prime the stack with a positive return value if there isn't one already;
      # this avoids us returning an error just because nothing sets a success code
      # since the modules above will each just jump around
      session	required	pam_permit.so
      # The pam_umask module will set the umask according to the system default in
      # /etc/login.defs and user settings, solving the problem of different
      # umask settings with different shells, display managers, remote sessions etc.
      # See "man pam_umask".
      session optional	pam_umask.so
      # and here are more per-package modules (the "Additional" block)
      session	required	pam_unix.so
      session	optional	pam_ldap.so
      session optional  pam_mkhomedir.so skel=/etc/skel
      # end of pam-auth-update config
  - path: /etc/pam.d/common-session-noninteractive
    permissions: '0644'
    owner: root:root
    content: |
      # /etc/pam.d/common-session-noninteractive - session-related modules
      # here are the per-package modules (the "Primary" block)
      session	[default=1]			pam_permit.so
      # here's the fallback if no module succeeds
      session	requisite			pam_deny.so
      # prime the stack with a positive return value if there isn't one already;
      # this avoids us returning an error just because nothing sets a success code
      # since the modules above will each just jump around
      session	required			pam_permit.so
      # The pam_umask module will set the umask according to the system default in
      # /etc/login.defs and user settings, solving the problem of different
      # umask settings with different shells, display managers, remote sessions etc.
      # See "man pam_umask".
      session optional			pam_umask.so
      # and here are more per-package modules (the "Additional" block)
      session	required	pam_unix.so
      # end of pam-auth-update config
{% endif %}
